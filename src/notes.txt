Lots of implicit rules for software that's not really used any more, like RCS and SCCS:
   Found an implicit rule for 'main.o'.
    Considering target file 'main.c'.
     Looking for an implicit rule for 'main.c'.
     Trying pattern rule with stem 'main'.
     Trying implicit prerequisite 'main.y'.
     Trying pattern rule with stem 'main'.
     Trying implicit prerequisite 'main.l'.
     Trying pattern rule with stem 'main'.
     Trying implicit prerequisite 'main.w'.
     Trying pattern rule with stem 'main'.
     Trying implicit prerequisite 'main.w'.
     Trying pattern rule with stem 'main.c'.
     Trying implicit prerequisite 'main.c,v'.
     Trying pattern rule with stem 'main.c'.
     Trying implicit prerequisite 'RCS/main.c,v'.
     Trying pattern rule with stem 'main.c'.
     Trying implicit prerequisite 'RCS/main.c'.
     Trying pattern rule with stem 'main.c'.
     Trying implicit prerequisite 's.main.c'.
     Trying pattern rule with stem 'main.c'.
     Trying implicit prerequisite 'SCCS/s.main.c'.
     Trying pattern rule with stem 'main'.
     Trying implicit prerequisite 'main.y'.

Need to use tabs for indentation!
$ make
Makefile:1: *** missing separator.  Stop.

Output from first run
$ make
gcc -Wall main.c -c
gcc -Wall hello.c -c
gcc -Wall main.o hello.o -o hello

What happens if we only update one of the files, say main.c ?
$ nano main.c # edits file
$ make # now make sees that main.c is updated so it rebuilds it before rebuilding the 'hello' target
gcc -Wall main.c -c
gcc -Wall main.o hello.o -o hello

What happens if we create a file named clean?
$Â touch clean
$ make clean
make: 'clean' is up to date.

We need to declare a .PHONY target! After:
$ make clean
rm -f *.o hello
